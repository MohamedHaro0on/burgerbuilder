{"version":3,"sources":["HOC/Auxulliary.js","components/Layout/Layout.js","components/Burger/BurgerIngerdient/BurgerIngerdient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","axiosOrders.js","components/UI/Spinner/Spinner.js","Container/BurgerBuilder/BurgerBuilder.js","HOC/ErrorHandler/ErrorHandler.js","App.js","serviceWorker.js","index.js","components/Burger/BurgerIngerdient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css"],"names":["aux","props","children","Layout","className","classes","content","BurgerIngerdient","Ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","reduce","arr","el","concat","length","console","log","Burger","BuildControl","Label","Less","onClick","remove","disabled","More","add","Controls","BuildContorls","BuildControls","price","toFixed","ctrl","bind","disabledInfo","OrderButton","orderButton","setModal","orders","axios","create","baseURL","Spinner","INGREDIENTS_PRICES","salad","cheese","bacon","meat","ErrorHandler","WrappedCompnent","state","error","closeModal","setState","interceptors","request","use","req","response","res","prevState","visible","onCancel","onOk","message","Modal","Loading","addIngredients","newCount","updatedIngredients","Price","removeIngredients","oldCount","Purchase","Data","customer","name","address","email","delievryMethod","post","then","catch","Error","get","data","key","ingredientsSummary","style","textTransform","OrderSummary","title","centered","App","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.030f561c.chunk.js","sourcesContent":["const aux = (props) => props.children\r\nexport default aux;","import React from \"react\";\r\nimport Aux from \"../../HOC/Auxulliary\"\r\nimport classes from \"./Layout.module.css\"\r\nconst Layout = (props) => (\r\n    <Aux>\r\n        <div> ToolBar  , SideDrawer , BackDrop </div>\r\n        <main className={classes.content}>\r\n            {props.children}\r\n        </main>\r\n    </Aux>\r\n)\r\nexport default Layout;","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\"\r\nimport propTypes from \"prop-types\"\r\nimport Aux from \"../../../HOC/Auxulliary\"\r\nclass BurgerIngerdient extends Component {\r\n    render() {\r\n        let Ingredient = null;\r\n        switch (this.props.type) {\r\n            case (\"bread-bottom\"): {\r\n                Ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            }\r\n            case (\"bread-top\"): {\r\n                Ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            }\r\n            case (\"meat\"): {\r\n                Ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            }\r\n            case (\"cheese\"): {\r\n                Ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            }\r\n            case (\"salad\"): {\r\n                Ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            }\r\n            case (\"bacon\"): {\r\n                Ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            }\r\n            default: {\r\n                Ingredient = null;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                {Ingredient}\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n}\r\nBurgerIngerdient.propTypes = {\r\n    type: propTypes.string.isRequired\r\n}\r\nexport default BurgerIngerdient;","import React from \"react\";\r\nimport classes from \"./Burger.module.css\"\r\nimport BurgerIngerdient from \"./BurgerIngerdient/BurgerIngerdient\"\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, index) => {\r\n            return <BurgerIngerdient type = {igKey} key = {igKey + index}/>\r\n        })\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, [])\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p> Please Add ingredients </p>\r\n    }\r\n    console.log(\"the transformedIngredients\"  , transformedIngredients)\r\n    return(\r\n        <div className= {classes.Burger}>\r\n            <BurgerIngerdient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngerdient type = \"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default burger;","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\"\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className = {classes.BuildControl}>\r\n            <div className = {classes.Label}>{props.Label}</div>\r\n            <button className = {classes.Less } onClick= {props.remove} disabled ={props.disabled} >Less</button>\r\n            <button className = {classes.More} onClick= {props.add}>More</button>\r\n        </div>\r\n    )\r\n}\r\nexport default BuildControl;","import React, { Component } from \"react\";\r\nimport classes from \"./BuildControls.module.css\"\r\nimport BuildContorl from './BuildControl/BuildControl'\r\nimport Aux from \"../../../HOC/Auxulliary\";\r\nconst Controls = [\r\n    { Label: \"Salad\", type: \"salad\" },\r\n    { Label: \"Bacon\", type: \"bacon\" },\r\n    { Label: \"Meat\", type: \"meat\" },\r\n    { Label: \"Cheese\", type: \"cheese\" },\r\n]\r\nclass BuildContorls extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <div className={classes.BuildControls}>\r\n                    <p> Current Price :<strong>{this.props.price.toFixed(2)}</strong> $ </p>\r\n                    {Controls.map(ctrl => <BuildContorl\r\n                        key={ctrl.Label}\r\n                        Label={ctrl.Label}\r\n                        add={this.props.add.bind(this, ctrl.type)}\r\n                        remove={this.props.remove.bind(this, ctrl.type)}\r\n                        disabled={this.props.disabledInfo[ctrl.type]}\r\n                    />\r\n                    )}\r\n                    <button\r\n                        className={classes.OrderButton}\r\n                        disabled={this.props.orderButton}\r\n                        onClick={this.props.setModal}> ORDER NOW </button>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nexport default BuildContorls","import axios from \"axios\";\r\nconst orders = axios.create({\r\n    baseURL: \"https://burgerbuilder-3b944.firebaseio.com/\",\r\n})\r\nexport default orders;","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = () => <div className =\"loader\">Loading...</div>\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport Aux from \"../../HOC/Auxulliary\"\r\nimport Burger from \"../../components/Burger/Burger\"\r\nimport BuidlControlles from \"../../components/Burger/BuildControls/BuildControls\"\r\nimport { Modal, Button } from 'antd';\r\n// import { arrayOf } from \"prop-types\";\r\nimport axios from \"../../axiosOrders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\nimport ErrorHandler from \"../../HOC/ErrorHandler/ErrorHandler\"\r\nconst INGREDIENTS_PRICES = {\r\n    salad: .5,\r\n    cheese: .4,\r\n    bacon: 0.7,\r\n    meat: 1.3,\r\n}\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {}, \r\n        price: 4,\r\n        orderButton: true,\r\n        Modal: false,\r\n        Loading : false , \r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"/ingredients.json\").then(response => {\r\n            console.log(\"The Response of the Request\", response)\r\n            this.setState({\r\n                ingredients : response.data ,  \r\n            })\r\n        }).catch(error => {\r\n            console.log(\"The Error of the GET request\", error);\r\n        })\r\n    }\r\n    setModal = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                Modal: !prevState.Modal\r\n            }\r\n        });\r\n    }\r\n    addIngredients = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const newCount = oldCount + 1;\r\n        const updatedIngredients = { ...this.state.ingredients }\r\n        updatedIngredients[type] = newCount;\r\n        const Price = this.state.price + INGREDIENTS_PRICES[type];\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            price: Price,\r\n            orderButton: false\r\n        })\r\n    }\r\n    removeIngredients = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const newCount = oldCount - 1,\r\n              updatedIngredients = { ...this.state.ingredients };\r\n              updatedIngredients[type] = newCount;\r\n        const price = this.state.price - INGREDIENTS_PRICES[type];\r\n        this.setState({ ingredients: updatedIngredients, price: price, orderButton: price == 4 })\r\n    }\r\n    Purchase = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                Loading : !prevState.Loading\r\n            }\r\n        })\r\n        let Data = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.price,\r\n            customer: {\r\n                name: \"Mohamed Ahmed \", \r\n                address: \"Egypt\",\r\n                email : \"mohamedharoon286@gmail.com\"\r\n            },\r\n            delievryMethod : \"Fastest\" ,\r\n        }\r\n        axios.post(\"/orders.json   \", Data).then(response => {\r\n            this.setModal(false);\r\n            this.setState(prevState=>{ return{ Loading : !prevState.Loading}})\r\n        }).catch(Error => {\r\n            console.log(\"The Error of the Request\" , Error )\r\n        })\r\n    }\r\n    render() {\r\n        const disabledInfo = { ...this.state.ingredients };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        const ingredientsSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n            return <li><span style={{textTransform:\"capitalize\"}}>{igKey}</span>: {this.state.ingredients[igKey]}</li>\r\n        })\r\n        let OrderSummary = (\r\n            <Aux> <h3> Your Order </h3>\r\n                <p> A delicious burger with the following ingredients :</p>\r\n                <ul>\r\n                    {ingredientsSummary}\r\n                </ul>\r\n                    <p><strong>the Total price : {this.state.price.toFixed(2)} $</strong></p></Aux>\r\n        )\r\n        if (this.state.Loading) {\r\n            OrderSummary = <Spinner/>\r\n        }\r\n        return (\r\n            <Aux>\r\n                <div> <Burger ingredients={this.state.ingredients} /> </div>\r\n                <BuidlControlles\r\n                    add={this.addIngredients}\r\n                    remove={this.removeIngredients}\r\n                    disabledInfo={disabledInfo}\r\n                    price={this.state.price}\r\n                    orderButton={this.state.orderButton}\r\n                    setModal = {this.setModal}\r\n                />\r\n                <Modal\r\n                    title=\" Your Order Summary\" \r\n                    centered\r\n                    visible={this.state.Modal}\r\n                    onOk={() => this.Purchase()}\r\n                    onCancel={() => this.setModal(false)}\r\n                >\r\n                    {OrderSummary}\r\n                </Modal>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nexport default ErrorHandler (BurgerBuilder , axios );","import React , {Component} from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport Aux from \"../Auxulliary\";\r\nconst ErrorHandler = (WrappedCompnent , axios ) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null,\r\n        }\r\n        componentWillMount() {\r\n            axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error : null ,\r\n                })\r\n                return req;\r\n            })\r\n            axios.interceptors.response.use(res => res, error => {\r\n                this.setState(prevState => {\r\n                    return {\r\n                        error : error ,\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        closeModal = () => {\r\n            this.setState({\r\n                error : null ,\r\n            })\r\n        }\r\n        render() {\r\n            console.log(\"The axios Sent as Props \", axios);\r\n            return (\r\n                <Aux>\r\n                    <Modal visible = {this.state.error} onCancel = {this.closeModal} onOk = {this.closeModal}>\r\n                        {this.state.error && this.state.error.message}\r\n                    </Modal>\r\n                    <WrappedCompnent {...this.props}/>\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default ErrorHandler; ","import React, { PureComponent } from 'react';\r\nimport Layout from \"./components/Layout/Layout\"\r\nimport BurgerBuilder from \"./Container/BurgerBuilder/BurgerBuilder\"\r\nclass App extends PureComponent {\r\n  render() {\r\n        return (\r\n      <div>\r\n        <Layout >\r\n          <BurgerBuilder />\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n// https://openbase.io/js/axios/documentation","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3-H6S\",\"BreadTop\":\"BurgerIngredient_BreadTop__1qTWt\",\"Seeds1\":\"BurgerIngredient_Seeds1__3-JHl\",\"Seeds2\":\"BurgerIngredient_Seeds2__3_Bej\",\"Meat\":\"BurgerIngredient_Meat__2RuTC\",\"Cheese\":\"BurgerIngredient_Cheese__ccIEL\",\"Salad\":\"BurgerIngredient_Salad__2iMrr\",\"Bacon\":\"BurgerIngredient_Bacon__3gToy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__37Td7\",\"Label\":\"BuildControl_Label__3AIJ9\",\"Less\":\"BuildControl_Less__3nkmp\",\"More\":\"BuildControl_More__3jLIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__JN6n-\",\"OrderButton\":\"BuildControls_OrderButton__1HJae\",\"enable\":\"BuildControls_enable__32BQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__335BH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__kG7wT\"};"],"sourceRoot":""}